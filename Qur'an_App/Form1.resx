<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8C/6zJRk/8N7RQAAAABJRU5ErkJggg==
</value>
  </data>
</root>